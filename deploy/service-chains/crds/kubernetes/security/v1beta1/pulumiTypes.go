// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AuthorizationPolicyType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html
	Spec   interface{}            `pulumi:"spec"`
	Status map[string]interface{} `pulumi:"status"`
}

type PeerAuthenticationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.
	Spec   *PeerAuthenticationSpec `pulumi:"spec"`
	Status map[string]interface{}  `pulumi:"status"`
}

// PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.
type PeerAuthenticationSpec struct {
	// Mutual TLS settings for workload.
	Mtls *PeerAuthenticationSpecMtls `pulumi:"mtls"`
	// Port specific mutual TLS settings.
	PortLevelMtls map[string]PeerAuthenticationSpecPortlevelmtls `pulumi:"portLevelMtls"`
	// The selector determines the workloads to apply the ChannelAuthentication on.
	Selector *PeerAuthenticationSpecSelector `pulumi:"selector"`
}

// PeerAuthenticationSpecInput is an input type that accepts PeerAuthenticationSpecArgs and PeerAuthenticationSpecOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecInput` via:
//
//	PeerAuthenticationSpecArgs{...}
type PeerAuthenticationSpecInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput
	ToPeerAuthenticationSpecOutputWithContext(context.Context) PeerAuthenticationSpecOutput
}

// PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.
type PeerAuthenticationSpecArgs struct {
	// Mutual TLS settings for workload.
	Mtls PeerAuthenticationSpecMtlsPtrInput `pulumi:"mtls"`
	// Port specific mutual TLS settings.
	PortLevelMtls PeerAuthenticationSpecPortlevelmtlsMapInput `pulumi:"portLevelMtls"`
	// The selector determines the workloads to apply the ChannelAuthentication on.
	Selector PeerAuthenticationSpecSelectorPtrInput `pulumi:"selector"`
}

func (PeerAuthenticationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpec)(nil)).Elem()
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput {
	return i.ToPeerAuthenticationSpecOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecOutputWithContext(ctx context.Context) PeerAuthenticationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecOutput)
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return i.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecOutput).ToPeerAuthenticationSpecPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecPtrInput is an input type that accepts PeerAuthenticationSpecArgs, PeerAuthenticationSpecPtr and PeerAuthenticationSpecPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPtrInput` via:
//
//	        PeerAuthenticationSpecArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput
	ToPeerAuthenticationSpecPtrOutputWithContext(context.Context) PeerAuthenticationSpecPtrOutput
}

type peerAuthenticationSpecPtrType PeerAuthenticationSpecArgs

func PeerAuthenticationSpecPtr(v *PeerAuthenticationSpecArgs) PeerAuthenticationSpecPtrInput {
	return (*peerAuthenticationSpecPtrType)(v)
}

func (*peerAuthenticationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpec)(nil)).Elem()
}

func (i *peerAuthenticationSpecPtrType) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return i.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecPtrType) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPtrOutput)
}

// PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.
type PeerAuthenticationSpecOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpec)(nil)).Elem()
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput {
	return o
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecOutputWithContext(ctx context.Context) PeerAuthenticationSpecOutput {
	return o
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return o.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpec) *PeerAuthenticationSpec {
		return &v
	}).(PeerAuthenticationSpecPtrOutput)
}

// Mutual TLS settings for workload.
func (o PeerAuthenticationSpecOutput) Mtls() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) *PeerAuthenticationSpecMtls { return v.Mtls }).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Port specific mutual TLS settings.
func (o PeerAuthenticationSpecOutput) PortLevelMtls() PeerAuthenticationSpecPortlevelmtlsMapOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) map[string]PeerAuthenticationSpecPortlevelmtls { return v.PortLevelMtls }).(PeerAuthenticationSpecPortlevelmtlsMapOutput)
}

// The selector determines the workloads to apply the ChannelAuthentication on.
func (o PeerAuthenticationSpecOutput) Selector() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) *PeerAuthenticationSpecSelector { return v.Selector }).(PeerAuthenticationSpecSelectorPtrOutput)
}

type PeerAuthenticationSpecPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpec)(nil)).Elem()
}

func (o PeerAuthenticationSpecPtrOutput) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return o
}

func (o PeerAuthenticationSpecPtrOutput) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return o
}

func (o PeerAuthenticationSpecPtrOutput) Elem() PeerAuthenticationSpecOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) PeerAuthenticationSpec {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpec
		return ret
	}).(PeerAuthenticationSpecOutput)
}

// Mutual TLS settings for workload.
func (o PeerAuthenticationSpecPtrOutput) Mtls() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) *PeerAuthenticationSpecMtls {
		if v == nil {
			return nil
		}
		return v.Mtls
	}).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Port specific mutual TLS settings.
func (o PeerAuthenticationSpecPtrOutput) PortLevelMtls() PeerAuthenticationSpecPortlevelmtlsMapOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) map[string]PeerAuthenticationSpecPortlevelmtls {
		if v == nil {
			return nil
		}
		return v.PortLevelMtls
	}).(PeerAuthenticationSpecPortlevelmtlsMapOutput)
}

// The selector determines the workloads to apply the ChannelAuthentication on.
func (o PeerAuthenticationSpecPtrOutput) Selector() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) *PeerAuthenticationSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(PeerAuthenticationSpecSelectorPtrOutput)
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtls struct {
	// Defines the mTLS mode used for peer authentication.
	Mode *string `pulumi:"mode"`
}

// PeerAuthenticationSpecMtlsInput is an input type that accepts PeerAuthenticationSpecMtlsArgs and PeerAuthenticationSpecMtlsOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecMtlsInput` via:
//
//	PeerAuthenticationSpecMtlsArgs{...}
type PeerAuthenticationSpecMtlsInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput
	ToPeerAuthenticationSpecMtlsOutputWithContext(context.Context) PeerAuthenticationSpecMtlsOutput
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsArgs struct {
	// Defines the mTLS mode used for peer authentication.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PeerAuthenticationSpecMtlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput {
	return i.ToPeerAuthenticationSpecMtlsOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsOutput)
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return i.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsOutput).ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecMtlsPtrInput is an input type that accepts PeerAuthenticationSpecMtlsArgs, PeerAuthenticationSpecMtlsPtr and PeerAuthenticationSpecMtlsPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecMtlsPtrInput` via:
//
//	        PeerAuthenticationSpecMtlsArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecMtlsPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput
	ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Context) PeerAuthenticationSpecMtlsPtrOutput
}

type peerAuthenticationSpecMtlsPtrType PeerAuthenticationSpecMtlsArgs

func PeerAuthenticationSpecMtlsPtr(v *PeerAuthenticationSpecMtlsArgs) PeerAuthenticationSpecMtlsPtrInput {
	return (*peerAuthenticationSpecMtlsPtrType)(v)
}

func (*peerAuthenticationSpecMtlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (i *peerAuthenticationSpecMtlsPtrType) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return i.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecMtlsPtrType) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecMtlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecMtls) *PeerAuthenticationSpecMtls {
		return &v
	}).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Defines the mTLS mode used for peer authentication.
func (o PeerAuthenticationSpecMtlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecMtls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PeerAuthenticationSpecMtlsPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecMtlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecMtlsPtrOutput) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPtrOutput) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPtrOutput) Elem() PeerAuthenticationSpecMtlsOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecMtls) PeerAuthenticationSpecMtls {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecMtls
		return ret
	}).(PeerAuthenticationSpecMtlsOutput)
}

// Defines the mTLS mode used for peer authentication.
func (o PeerAuthenticationSpecMtlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecMtls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type PeerAuthenticationSpecPortlevelmtls struct {
	// Defines the mTLS mode used for peer authentication.
	Mode *string `pulumi:"mode"`
}

// PeerAuthenticationSpecPortlevelmtlsInput is an input type that accepts PeerAuthenticationSpecPortlevelmtlsArgs and PeerAuthenticationSpecPortlevelmtlsOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPortlevelmtlsInput` via:
//
//	PeerAuthenticationSpecPortlevelmtlsArgs{...}
type PeerAuthenticationSpecPortlevelmtlsInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPortlevelmtlsOutput() PeerAuthenticationSpecPortlevelmtlsOutput
	ToPeerAuthenticationSpecPortlevelmtlsOutputWithContext(context.Context) PeerAuthenticationSpecPortlevelmtlsOutput
}

type PeerAuthenticationSpecPortlevelmtlsArgs struct {
	// Defines the mTLS mode used for peer authentication.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PeerAuthenticationSpecPortlevelmtlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecPortlevelmtls)(nil)).Elem()
}

func (i PeerAuthenticationSpecPortlevelmtlsArgs) ToPeerAuthenticationSpecPortlevelmtlsOutput() PeerAuthenticationSpecPortlevelmtlsOutput {
	return i.ToPeerAuthenticationSpecPortlevelmtlsOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecPortlevelmtlsArgs) ToPeerAuthenticationSpecPortlevelmtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecPortlevelmtlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPortlevelmtlsOutput)
}

// PeerAuthenticationSpecPortlevelmtlsMapInput is an input type that accepts PeerAuthenticationSpecPortlevelmtlsMap and PeerAuthenticationSpecPortlevelmtlsMapOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPortlevelmtlsMapInput` via:
//
//	PeerAuthenticationSpecPortlevelmtlsMap{ "key": PeerAuthenticationSpecPortlevelmtlsArgs{...} }
type PeerAuthenticationSpecPortlevelmtlsMapInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPortlevelmtlsMapOutput() PeerAuthenticationSpecPortlevelmtlsMapOutput
	ToPeerAuthenticationSpecPortlevelmtlsMapOutputWithContext(context.Context) PeerAuthenticationSpecPortlevelmtlsMapOutput
}

type PeerAuthenticationSpecPortlevelmtlsMap map[string]PeerAuthenticationSpecPortlevelmtlsInput

func (PeerAuthenticationSpecPortlevelmtlsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PeerAuthenticationSpecPortlevelmtls)(nil)).Elem()
}

func (i PeerAuthenticationSpecPortlevelmtlsMap) ToPeerAuthenticationSpecPortlevelmtlsMapOutput() PeerAuthenticationSpecPortlevelmtlsMapOutput {
	return i.ToPeerAuthenticationSpecPortlevelmtlsMapOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecPortlevelmtlsMap) ToPeerAuthenticationSpecPortlevelmtlsMapOutputWithContext(ctx context.Context) PeerAuthenticationSpecPortlevelmtlsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPortlevelmtlsMapOutput)
}

type PeerAuthenticationSpecPortlevelmtlsOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPortlevelmtlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecPortlevelmtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecPortlevelmtlsOutput) ToPeerAuthenticationSpecPortlevelmtlsOutput() PeerAuthenticationSpecPortlevelmtlsOutput {
	return o
}

func (o PeerAuthenticationSpecPortlevelmtlsOutput) ToPeerAuthenticationSpecPortlevelmtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecPortlevelmtlsOutput {
	return o
}

// Defines the mTLS mode used for peer authentication.
func (o PeerAuthenticationSpecPortlevelmtlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecPortlevelmtls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PeerAuthenticationSpecPortlevelmtlsMapOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPortlevelmtlsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PeerAuthenticationSpecPortlevelmtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecPortlevelmtlsMapOutput) ToPeerAuthenticationSpecPortlevelmtlsMapOutput() PeerAuthenticationSpecPortlevelmtlsMapOutput {
	return o
}

func (o PeerAuthenticationSpecPortlevelmtlsMapOutput) ToPeerAuthenticationSpecPortlevelmtlsMapOutputWithContext(ctx context.Context) PeerAuthenticationSpecPortlevelmtlsMapOutput {
	return o
}

func (o PeerAuthenticationSpecPortlevelmtlsMapOutput) MapIndex(k pulumi.StringInput) PeerAuthenticationSpecPortlevelmtlsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) PeerAuthenticationSpecPortlevelmtls {
		return vs[0].(map[string]PeerAuthenticationSpecPortlevelmtls)[vs[1].(string)]
	}).(PeerAuthenticationSpecPortlevelmtlsOutput)
}

// The selector determines the workloads to apply the ChannelAuthentication on.
type PeerAuthenticationSpecSelector struct {
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PeerAuthenticationSpecSelectorInput is an input type that accepts PeerAuthenticationSpecSelectorArgs and PeerAuthenticationSpecSelectorOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecSelectorInput` via:
//
//	PeerAuthenticationSpecSelectorArgs{...}
type PeerAuthenticationSpecSelectorInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput
	ToPeerAuthenticationSpecSelectorOutputWithContext(context.Context) PeerAuthenticationSpecSelectorOutput
}

// The selector determines the workloads to apply the ChannelAuthentication on.
type PeerAuthenticationSpecSelectorArgs struct {
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PeerAuthenticationSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput {
	return i.ToPeerAuthenticationSpecSelectorOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorOutput)
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return i.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorOutput).ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecSelectorPtrInput is an input type that accepts PeerAuthenticationSpecSelectorArgs, PeerAuthenticationSpecSelectorPtr and PeerAuthenticationSpecSelectorPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecSelectorPtrInput` via:
//
//	        PeerAuthenticationSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecSelectorPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput
	ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Context) PeerAuthenticationSpecSelectorPtrOutput
}

type peerAuthenticationSpecSelectorPtrType PeerAuthenticationSpecSelectorArgs

func PeerAuthenticationSpecSelectorPtr(v *PeerAuthenticationSpecSelectorArgs) PeerAuthenticationSpecSelectorPtrInput {
	return (*peerAuthenticationSpecSelectorPtrType)(v)
}

func (*peerAuthenticationSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (i *peerAuthenticationSpecSelectorPtrType) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return i.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecSelectorPtrType) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorPtrOutput)
}

// The selector determines the workloads to apply the ChannelAuthentication on.
type PeerAuthenticationSpecSelectorOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecSelector) *PeerAuthenticationSpecSelector {
		return &v
	}).(PeerAuthenticationSpecSelectorPtrOutput)
}

func (o PeerAuthenticationSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type PeerAuthenticationSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (o PeerAuthenticationSpecSelectorPtrOutput) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPtrOutput) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPtrOutput) Elem() PeerAuthenticationSpecSelectorOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecSelector) PeerAuthenticationSpecSelector {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecSelector
		return ret
	}).(PeerAuthenticationSpecSelectorOutput)
}

func (o PeerAuthenticationSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type PeerAuthenticationSpecSelectorMatchlabels struct {
}

type RequestAuthenticationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// RequestAuthentication defines what request authentication methods are supported by a workload.
	Spec   *RequestAuthenticationSpec `pulumi:"spec"`
	Status map[string]interface{}     `pulumi:"status"`
}

// RequestAuthentication defines what request authentication methods are supported by a workload.
type RequestAuthenticationSpec struct {
	// Define the list of JWTs that can be validated at the selected workloads' proxy.
	JwtRules []RequestAuthenticationSpecJwtrules `pulumi:"jwtRules"`
	// Optional.
	Selector *RequestAuthenticationSpecSelector `pulumi:"selector"`
}

// RequestAuthenticationSpecInput is an input type that accepts RequestAuthenticationSpecArgs and RequestAuthenticationSpecOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecInput` via:
//
//	RequestAuthenticationSpecArgs{...}
type RequestAuthenticationSpecInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput
	ToRequestAuthenticationSpecOutputWithContext(context.Context) RequestAuthenticationSpecOutput
}

// RequestAuthentication defines what request authentication methods are supported by a workload.
type RequestAuthenticationSpecArgs struct {
	// Define the list of JWTs that can be validated at the selected workloads' proxy.
	JwtRules RequestAuthenticationSpecJwtrulesArrayInput `pulumi:"jwtRules"`
	// Optional.
	Selector RequestAuthenticationSpecSelectorPtrInput `pulumi:"selector"`
}

func (RequestAuthenticationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpec)(nil)).Elem()
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput {
	return i.ToRequestAuthenticationSpecOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecOutputWithContext(ctx context.Context) RequestAuthenticationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecOutput)
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return i.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecOutput).ToRequestAuthenticationSpecPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecPtrInput is an input type that accepts RequestAuthenticationSpecArgs, RequestAuthenticationSpecPtr and RequestAuthenticationSpecPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecPtrInput` via:
//
//	        RequestAuthenticationSpecArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput
	ToRequestAuthenticationSpecPtrOutputWithContext(context.Context) RequestAuthenticationSpecPtrOutput
}

type requestAuthenticationSpecPtrType RequestAuthenticationSpecArgs

func RequestAuthenticationSpecPtr(v *RequestAuthenticationSpecArgs) RequestAuthenticationSpecPtrInput {
	return (*requestAuthenticationSpecPtrType)(v)
}

func (*requestAuthenticationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpec)(nil)).Elem()
}

func (i *requestAuthenticationSpecPtrType) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return i.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecPtrType) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecPtrOutput)
}

// RequestAuthentication defines what request authentication methods are supported by a workload.
type RequestAuthenticationSpecOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpec)(nil)).Elem()
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput {
	return o
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecOutputWithContext(ctx context.Context) RequestAuthenticationSpecOutput {
	return o
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return o.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpec) *RequestAuthenticationSpec {
		return &v
	}).(RequestAuthenticationSpecPtrOutput)
}

// Define the list of JWTs that can be validated at the selected workloads' proxy.
func (o RequestAuthenticationSpecOutput) JwtRules() RequestAuthenticationSpecJwtrulesArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) []RequestAuthenticationSpecJwtrules { return v.JwtRules }).(RequestAuthenticationSpecJwtrulesArrayOutput)
}

// Optional.
func (o RequestAuthenticationSpecOutput) Selector() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) *RequestAuthenticationSpecSelector { return v.Selector }).(RequestAuthenticationSpecSelectorPtrOutput)
}

type RequestAuthenticationSpecPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpec)(nil)).Elem()
}

func (o RequestAuthenticationSpecPtrOutput) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return o
}

func (o RequestAuthenticationSpecPtrOutput) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return o
}

func (o RequestAuthenticationSpecPtrOutput) Elem() RequestAuthenticationSpecOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) RequestAuthenticationSpec {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpec
		return ret
	}).(RequestAuthenticationSpecOutput)
}

// Define the list of JWTs that can be validated at the selected workloads' proxy.
func (o RequestAuthenticationSpecPtrOutput) JwtRules() RequestAuthenticationSpecJwtrulesArrayOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) []RequestAuthenticationSpecJwtrules {
		if v == nil {
			return nil
		}
		return v.JwtRules
	}).(RequestAuthenticationSpecJwtrulesArrayOutput)
}

// Optional.
func (o RequestAuthenticationSpecPtrOutput) Selector() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) *RequestAuthenticationSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(RequestAuthenticationSpecSelectorPtrOutput)
}

type RequestAuthenticationSpecJwtrules struct {
	Audiences []string `pulumi:"audiences"`
	// If set to true, the original token will be kept for the upstream request.
	ForwardOriginalToken *bool `pulumi:"forwardOriginalToken"`
	// List of header locations from which JWT is expected.
	FromHeaders []RequestAuthenticationSpecJwtrulesFromheaders `pulumi:"fromHeaders"`
	// List of query parameters from which JWT is expected.
	FromParams []string `pulumi:"fromParams"`
	// Identifies the issuer that issued the JWT.
	Issuer *string `pulumi:"issuer"`
	// JSON Web Key Set of public keys to validate signature of the JWT.
	Jwks                  *string `pulumi:"jwks"`
	JwksUri               *string `pulumi:"jwksUri"`
	Jwks_uri              *string `pulumi:"jwks_uri"`
	OutputPayloadToHeader *string `pulumi:"outputPayloadToHeader"`
}

// RequestAuthenticationSpecJwtrulesInput is an input type that accepts RequestAuthenticationSpecJwtrulesArgs and RequestAuthenticationSpecJwtrulesOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtrulesInput` via:
//
//	RequestAuthenticationSpecJwtrulesArgs{...}
type RequestAuthenticationSpecJwtrulesInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtrulesOutput() RequestAuthenticationSpecJwtrulesOutput
	ToRequestAuthenticationSpecJwtrulesOutputWithContext(context.Context) RequestAuthenticationSpecJwtrulesOutput
}

type RequestAuthenticationSpecJwtrulesArgs struct {
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// If set to true, the original token will be kept for the upstream request.
	ForwardOriginalToken pulumi.BoolPtrInput `pulumi:"forwardOriginalToken"`
	// List of header locations from which JWT is expected.
	FromHeaders RequestAuthenticationSpecJwtrulesFromheadersArrayInput `pulumi:"fromHeaders"`
	// List of query parameters from which JWT is expected.
	FromParams pulumi.StringArrayInput `pulumi:"fromParams"`
	// Identifies the issuer that issued the JWT.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// JSON Web Key Set of public keys to validate signature of the JWT.
	Jwks                  pulumi.StringPtrInput `pulumi:"jwks"`
	JwksUri               pulumi.StringPtrInput `pulumi:"jwksUri"`
	Jwks_uri              pulumi.StringPtrInput `pulumi:"jwks_uri"`
	OutputPayloadToHeader pulumi.StringPtrInput `pulumi:"outputPayloadToHeader"`
}

func (RequestAuthenticationSpecJwtrulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtrules)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtrulesArgs) ToRequestAuthenticationSpecJwtrulesOutput() RequestAuthenticationSpecJwtrulesOutput {
	return i.ToRequestAuthenticationSpecJwtrulesOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtrulesArgs) ToRequestAuthenticationSpecJwtrulesOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtrulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtrulesOutput)
}

// RequestAuthenticationSpecJwtrulesArrayInput is an input type that accepts RequestAuthenticationSpecJwtrulesArray and RequestAuthenticationSpecJwtrulesArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtrulesArrayInput` via:
//
//	RequestAuthenticationSpecJwtrulesArray{ RequestAuthenticationSpecJwtrulesArgs{...} }
type RequestAuthenticationSpecJwtrulesArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtrulesArrayOutput() RequestAuthenticationSpecJwtrulesArrayOutput
	ToRequestAuthenticationSpecJwtrulesArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtrulesArrayOutput
}

type RequestAuthenticationSpecJwtrulesArray []RequestAuthenticationSpecJwtrulesInput

func (RequestAuthenticationSpecJwtrulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtrules)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtrulesArray) ToRequestAuthenticationSpecJwtrulesArrayOutput() RequestAuthenticationSpecJwtrulesArrayOutput {
	return i.ToRequestAuthenticationSpecJwtrulesArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtrulesArray) ToRequestAuthenticationSpecJwtrulesArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtrulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtrulesArrayOutput)
}

type RequestAuthenticationSpecJwtrulesOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtrulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtrules)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtrulesOutput) ToRequestAuthenticationSpecJwtrulesOutput() RequestAuthenticationSpecJwtrulesOutput {
	return o
}

func (o RequestAuthenticationSpecJwtrulesOutput) ToRequestAuthenticationSpecJwtrulesOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtrulesOutput {
	return o
}

func (o RequestAuthenticationSpecJwtrulesOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// If set to true, the original token will be kept for the upstream request.
func (o RequestAuthenticationSpecJwtrulesOutput) ForwardOriginalToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) *bool { return v.ForwardOriginalToken }).(pulumi.BoolPtrOutput)
}

// List of header locations from which JWT is expected.
func (o RequestAuthenticationSpecJwtrulesOutput) FromHeaders() RequestAuthenticationSpecJwtrulesFromheadersArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) []RequestAuthenticationSpecJwtrulesFromheaders {
		return v.FromHeaders
	}).(RequestAuthenticationSpecJwtrulesFromheadersArrayOutput)
}

// List of query parameters from which JWT is expected.
func (o RequestAuthenticationSpecJwtrulesOutput) FromParams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) []string { return v.FromParams }).(pulumi.StringArrayOutput)
}

// Identifies the issuer that issued the JWT.
func (o RequestAuthenticationSpecJwtrulesOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// JSON Web Key Set of public keys to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtrulesOutput) Jwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) *string { return v.Jwks }).(pulumi.StringPtrOutput)
}

func (o RequestAuthenticationSpecJwtrulesOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

func (o RequestAuthenticationSpecJwtrulesOutput) Jwks_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) *string { return v.Jwks_uri }).(pulumi.StringPtrOutput)
}

func (o RequestAuthenticationSpecJwtrulesOutput) OutputPayloadToHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrules) *string { return v.OutputPayloadToHeader }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtrulesArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtrulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtrules)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtrulesArrayOutput) ToRequestAuthenticationSpecJwtrulesArrayOutput() RequestAuthenticationSpecJwtrulesArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtrulesArrayOutput) ToRequestAuthenticationSpecJwtrulesArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtrulesArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtrulesArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtrulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtrules {
		return vs[0].([]RequestAuthenticationSpecJwtrules)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtrulesOutput)
}

type RequestAuthenticationSpecJwtrulesFromheaders struct {
	// The HTTP header name.
	Name *string `pulumi:"name"`
	// The prefix that should be stripped before decoding the token.
	Prefix *string `pulumi:"prefix"`
}

// RequestAuthenticationSpecJwtrulesFromheadersInput is an input type that accepts RequestAuthenticationSpecJwtrulesFromheadersArgs and RequestAuthenticationSpecJwtrulesFromheadersOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtrulesFromheadersInput` via:
//
//	RequestAuthenticationSpecJwtrulesFromheadersArgs{...}
type RequestAuthenticationSpecJwtrulesFromheadersInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtrulesFromheadersOutput() RequestAuthenticationSpecJwtrulesFromheadersOutput
	ToRequestAuthenticationSpecJwtrulesFromheadersOutputWithContext(context.Context) RequestAuthenticationSpecJwtrulesFromheadersOutput
}

type RequestAuthenticationSpecJwtrulesFromheadersArgs struct {
	// The HTTP header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The prefix that should be stripped before decoding the token.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RequestAuthenticationSpecJwtrulesFromheadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtrulesFromheaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtrulesFromheadersArgs) ToRequestAuthenticationSpecJwtrulesFromheadersOutput() RequestAuthenticationSpecJwtrulesFromheadersOutput {
	return i.ToRequestAuthenticationSpecJwtrulesFromheadersOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtrulesFromheadersArgs) ToRequestAuthenticationSpecJwtrulesFromheadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtrulesFromheadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtrulesFromheadersOutput)
}

// RequestAuthenticationSpecJwtrulesFromheadersArrayInput is an input type that accepts RequestAuthenticationSpecJwtrulesFromheadersArray and RequestAuthenticationSpecJwtrulesFromheadersArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtrulesFromheadersArrayInput` via:
//
//	RequestAuthenticationSpecJwtrulesFromheadersArray{ RequestAuthenticationSpecJwtrulesFromheadersArgs{...} }
type RequestAuthenticationSpecJwtrulesFromheadersArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtrulesFromheadersArrayOutput() RequestAuthenticationSpecJwtrulesFromheadersArrayOutput
	ToRequestAuthenticationSpecJwtrulesFromheadersArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtrulesFromheadersArrayOutput
}

type RequestAuthenticationSpecJwtrulesFromheadersArray []RequestAuthenticationSpecJwtrulesFromheadersInput

func (RequestAuthenticationSpecJwtrulesFromheadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtrulesFromheaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtrulesFromheadersArray) ToRequestAuthenticationSpecJwtrulesFromheadersArrayOutput() RequestAuthenticationSpecJwtrulesFromheadersArrayOutput {
	return i.ToRequestAuthenticationSpecJwtrulesFromheadersArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtrulesFromheadersArray) ToRequestAuthenticationSpecJwtrulesFromheadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtrulesFromheadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtrulesFromheadersArrayOutput)
}

type RequestAuthenticationSpecJwtrulesFromheadersOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtrulesFromheadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtrulesFromheaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtrulesFromheadersOutput) ToRequestAuthenticationSpecJwtrulesFromheadersOutput() RequestAuthenticationSpecJwtrulesFromheadersOutput {
	return o
}

func (o RequestAuthenticationSpecJwtrulesFromheadersOutput) ToRequestAuthenticationSpecJwtrulesFromheadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtrulesFromheadersOutput {
	return o
}

// The HTTP header name.
func (o RequestAuthenticationSpecJwtrulesFromheadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrulesFromheaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The prefix that should be stripped before decoding the token.
func (o RequestAuthenticationSpecJwtrulesFromheadersOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtrulesFromheaders) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtrulesFromheadersArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtrulesFromheadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtrulesFromheaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtrulesFromheadersArrayOutput) ToRequestAuthenticationSpecJwtrulesFromheadersArrayOutput() RequestAuthenticationSpecJwtrulesFromheadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtrulesFromheadersArrayOutput) ToRequestAuthenticationSpecJwtrulesFromheadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtrulesFromheadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtrulesFromheadersArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtrulesFromheadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtrulesFromheaders {
		return vs[0].([]RequestAuthenticationSpecJwtrulesFromheaders)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtrulesFromheadersOutput)
}

// Optional.
type RequestAuthenticationSpecSelector struct {
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// RequestAuthenticationSpecSelectorInput is an input type that accepts RequestAuthenticationSpecSelectorArgs and RequestAuthenticationSpecSelectorOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecSelectorInput` via:
//
//	RequestAuthenticationSpecSelectorArgs{...}
type RequestAuthenticationSpecSelectorInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput
	ToRequestAuthenticationSpecSelectorOutputWithContext(context.Context) RequestAuthenticationSpecSelectorOutput
}

// Optional.
type RequestAuthenticationSpecSelectorArgs struct {
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (RequestAuthenticationSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput {
	return i.ToRequestAuthenticationSpecSelectorOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorOutput)
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return i.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorOutput).ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecSelectorPtrInput is an input type that accepts RequestAuthenticationSpecSelectorArgs, RequestAuthenticationSpecSelectorPtr and RequestAuthenticationSpecSelectorPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecSelectorPtrInput` via:
//
//	        RequestAuthenticationSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecSelectorPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput
	ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Context) RequestAuthenticationSpecSelectorPtrOutput
}

type requestAuthenticationSpecSelectorPtrType RequestAuthenticationSpecSelectorArgs

func RequestAuthenticationSpecSelectorPtr(v *RequestAuthenticationSpecSelectorArgs) RequestAuthenticationSpecSelectorPtrInput {
	return (*requestAuthenticationSpecSelectorPtrType)(v)
}

func (*requestAuthenticationSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (i *requestAuthenticationSpecSelectorPtrType) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return i.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecSelectorPtrType) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorPtrOutput)
}

// Optional.
type RequestAuthenticationSpecSelectorOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpecSelector) *RequestAuthenticationSpecSelector {
		return &v
	}).(RequestAuthenticationSpecSelectorPtrOutput)
}

func (o RequestAuthenticationSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type RequestAuthenticationSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (o RequestAuthenticationSpecSelectorPtrOutput) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPtrOutput) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPtrOutput) Elem() RequestAuthenticationSpecSelectorOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecSelector) RequestAuthenticationSpecSelector {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpecSelector
		return ret
	}).(RequestAuthenticationSpecSelectorOutput)
}

func (o RequestAuthenticationSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type RequestAuthenticationSpecSelectorMatchlabels struct {
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecInput)(nil)).Elem(), PeerAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPtrInput)(nil)).Elem(), PeerAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecMtlsInput)(nil)).Elem(), PeerAuthenticationSpecMtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecMtlsPtrInput)(nil)).Elem(), PeerAuthenticationSpecMtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPortlevelmtlsInput)(nil)).Elem(), PeerAuthenticationSpecPortlevelmtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPortlevelmtlsMapInput)(nil)).Elem(), PeerAuthenticationSpecPortlevelmtlsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecSelectorInput)(nil)).Elem(), PeerAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecSelectorPtrInput)(nil)).Elem(), PeerAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecInput)(nil)).Elem(), RequestAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecPtrInput)(nil)).Elem(), RequestAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtrulesInput)(nil)).Elem(), RequestAuthenticationSpecJwtrulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtrulesArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtrulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtrulesFromheadersInput)(nil)).Elem(), RequestAuthenticationSpecJwtrulesFromheadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtrulesFromheadersArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtrulesFromheadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecSelectorInput)(nil)).Elem(), RequestAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecSelectorPtrInput)(nil)).Elem(), RequestAuthenticationSpecSelectorArgs{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecMtlsOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecMtlsPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPortlevelmtlsOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPortlevelmtlsMapOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecSelectorOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtrulesOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtrulesArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtrulesFromheadersOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtrulesFromheadersArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecSelectorOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecSelectorPtrOutput{})
}
